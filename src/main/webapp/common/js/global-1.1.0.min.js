//本地存储
var lcstor = window.localStorage;

var $_ERROE_CODE = '300';
var $_SUCCESS_CODE = '200';

function setStorage(key, value) {
	if (lcstor)
		lcstor[key] = value;
	// else
	// alert('localStorage error');
}

function getStorage(key) {
	if (lcstor) {
		for (i in lcstor) {
			if (i == key)
				return lcstor[i];
		}
	}
	// else
	// alert('localStorage error');
}

function clearStorage(key) {
	if (lcstor) {
		if (key)
			lcstor.removeItem(key);
		else
			lcstor.clear();
	}
	// else
	// alert('localStorage error');
}

// 显示加载器
function showLoader(msg) {
	// 显示加载器.for jQuery Mobile 1.2.0
	$.mobile.loading('show', {
		text : msg, // 加载器中显示的文字
		textVisible : true, // 是否显示文字
		theme : 'b', // 加载器主题样式a-e
		textonly : true, // 是否只显示文字
		html : "" // 要显示的html内容，如图片等
	});
	setInterval(hideLoader, 5000);
}

// 隐藏加载器.for jQuery Mobile 1.2.0
function hideLoader() {
	// 隐藏加载器
	$.mobile.loading('hide');
}

$.openPage = function(url) {
	window.location.href = url;
}
function openAjax(urlStr, dataParm, callback) {
	$.ajax({
		type : "POST",
		dataType : 'json',
		timeout : 30000,
		data : dataParm,
		url : urlStr,
		beforeSend : function() {
			$.mobile.loading('show', {
				text : '加载中', // 加载器中显示的文字
				textVisible : true, // 是否显示文字
				theme : 'b', // 加载器主题样式a-e
				textonly : false, // 是否只显示文字
				html : "" // 要显示的html内容，如图片等
			});
		},
		/*
		 * complete:function(){ hideLoader(); },
		 */
		success : function(data) {
			hideLoader();
			callback(data);
		},
		error : function() {
			hideLoader();
			showLoader("加载失败！");
		}
	});
}

/**
 * 刷新验证码
 */
function initCaptcha(imgId) {
	$("input[name='captcha']").val("");
	if (imgId == undefined || imgId == null) {
		imgId = "captchaImg";
	}
	$("#" + imgId).click();
}

function strToJson(str) {
	var json = eval('(' + str + ')');
	return json;
}
// 去除字符中的空格
function trim(str) {
	str = str.replace(/^(\s| )+/, '');
	for ( var i = str.length - 1; i >= 0; i--) {
		if (/\S/.test(str.charAt(i))) {
			str = str.substring(0, i + 1);
			break;
		}
	}
	return str;
}

Date.prototype.format = function(format) {
	var o = {
		"M+" : this.getMonth() + 1, // month
		"d+" : this.getDate(), // day
		"h+" : this.getHours(), // hour
		"m+" : this.getMinutes(), // minute
		"s+" : this.getSeconds(), // second
		"q+" : Math.floor((this.getMonth() + 3) / 3), // quarter
		"S" : this.getMilliseconds()
	// millisecond
	}
	if (/(y+)/.test(format))
		format = format.replace(RegExp.$1, (this.getFullYear() + "")
				.substr(4 - RegExp.$1.length));
	for ( var k in o)
		if (new RegExp("(" + k + ")").test(format))
			format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k]
					: ("00" + o[k]).substr(("" + o[k]).length));
	return format;
}

/**
 * 数字加逗号
 * 
 * @param nStr
 * @returns
 */
function addCommas(nStr) {
	nStr += '';
	x = nStr.split('.');
	x1 = x[0];
	x2 = x.length > 1 ? '.' + x[1] : '';
	var rgx = /(\d+)(\d{3})/;
	while (rgx.test(x1)) {
		x1 = x1.replace(rgx, '$1' + ',' + '$2');
	}
	return x1 + x2;
}

String.prototype.lengthStr = function() {
	var len = 0;
	for ( var i = 0; i < this.length; i++) {
		if (this.charCodeAt(i) > 255 || this.charCodeAt(i) < 0) {
			len += 2
		} else {
			len++
		}
	}
	return len
};

String.prototype.strChars = function() {
	var chars = new Array();
	for ( var i = 0; i < this.length; i++) {
		chars[i] = [ this.substr(i, 1), this.isCHS(i) ]
	}
	String.prototype.charsArray = chars;
	return chars
};

String.prototype.isCHS = function(i) {
	if (this.charCodeAt(i) > 255 || this.charCodeAt(i) < 0) {
		return true
	} else {
		return false
	}
};

String.prototype.subString = function(start, end) {
	var len = 0;
	var str = "";
	this.strChars();
	for ( var i = 0; i < this.length; i++) {
		if (this.charsArray[i][1]) {
			len += 2
		} else {
			len++
		}
		;
		if (end < len) {
			return str
		} else if (start < len) {
			str += this.charsArray[i][0]
		}
	}
	;
	return str;
};

String.prototype.subChsString = function(start, length) {
	return this.subString(start, start + length)
};
/**
 * 根据传入的符号数组，将其替换为相应的字符串,后两个参数长度要想等
 * @param string要操作的字符串
 * @param symbols特殊符号
 * @param replaceMents要替换的字符串
 * @author fanyinchuan
 * @returns {String}
 */
function changeSymbol(string,symbols, replaceMents) {
	var result = "";
	for ( var index = 0; index < symbols.length; index++) {
		var symbol = symbols[index];
		var symbolIndex = string.indexOf(symbol);
		var replaceMent = replaceMents[index];
		result += string.substring(0,symbolIndex)+replaceMent;
		string = string.substring(symbolIndex+1);
	}
	return result+string;
}

/* 延迟加载 */
function yanchi() {
	var animateDiv = $('.percent_small');
	// var animateDiv = $('.percent_small');
	animateEle();
	$(window).scroll(function() {
		animateEle()
	});
	function animateEle() {
		var playRange = {
			top : $(window).scrollTop(),
			bottom : $(window).scrollTop() + $(window).height()
		};
		animateDiv.each(function() {
			if (playRange.top <= $(this).offset().top
					&& playRange.bottom >= $(this).offset().top
					&& !$(this).data('bPlay')) {
				$(this).data('bPlay', true);
				var nPercent = $(this).parent().find('font').text().replace(
						/\%/, '');
				// var nPercent = $(this).find('div').text().replace(/\%/, '');
				$(this).svgCircle({
					parent : $(this)[0],
					w : 40,
					R : 16,
					sW : 3,
					color : [ "#FE9D14", "#FE9D14", "#FE9D14" ],
					perent : [ 100, nPercent ],
					speed : 150,
					delay : 400
				});
			}
		});
	}
}
